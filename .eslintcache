[{"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\index.jsx":"1","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\serviceWorker.js":"2","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\app\\store.js":"3","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\App.jsx":"4","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\counter\\counterSlice.js":"5","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\index.jsx":"6","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\AppBars\\index.jsx":"7","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\index.jsx":"8","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelistLazyLoad.jsx":"9","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\AppBars\\FixedPosition.jsx":"10","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\Header.jsx":"11","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\Main.jsx":"12","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelist.jsx":"13","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\theme.js":"14","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelistPromise.jsx":"15","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\index.jsx":"16","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\Users.jsx":"17","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\Article.jsx":"18","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\index.jsx":"19","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\ReqResUsers.jsx":"20","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\JsonPlaceholderFetchUsers.jsx":"21","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\JsonPlaceholderAxiosUsers.jsx":"22","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\MuiFetchReqResUsers.jsx":"23","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\PplCard.jsx":"24"},{"size":928,"mtime":1611540920003,"results":"25","hashOfConfig":"26"},{"size":5141,"mtime":1601142227511,"results":"27","hashOfConfig":"26"},{"size":206,"mtime":1601142227511,"results":"28","hashOfConfig":"26"},{"size":2574,"mtime":1611540578549,"results":"29","hashOfConfig":"26"},{"size":1551,"mtime":1601142227511,"results":"30","hashOfConfig":"26"},{"size":234,"mtime":1611181866980,"results":"31","hashOfConfig":"26"},{"size":176,"mtime":1610974460329,"results":"32","hashOfConfig":"26"},{"size":97,"mtime":1609718175682,"results":"33","hashOfConfig":"26"},{"size":5286,"mtime":1611438085384,"results":"34","hashOfConfig":"26"},{"size":1450,"mtime":1610936129155,"results":"35","hashOfConfig":"26"},{"size":614,"mtime":1610844904519,"results":"36","hashOfConfig":"26"},{"size":163,"mtime":1609708342468,"results":"37","hashOfConfig":"26"},{"size":4603,"mtime":1611431629136,"results":"38","hashOfConfig":"26"},{"size":453,"mtime":1611420677027,"results":"39","hashOfConfig":"26"},{"size":611,"mtime":1611439308762,"results":"40","hashOfConfig":"26"},{"size":204,"mtime":1611523219511,"results":"41","hashOfConfig":"26"},{"size":1447,"mtime":1611522262557,"results":"42","hashOfConfig":"26"},{"size":681,"mtime":1611517178663,"results":"43","hashOfConfig":"26"},{"size":295,"mtime":1611526141640,"results":"44","hashOfConfig":"26"},{"size":1033,"mtime":1611522389384,"results":"45","hashOfConfig":"26"},{"size":1551,"mtime":1611523137689,"results":"46","hashOfConfig":"26"},{"size":1561,"mtime":1611523630935,"results":"47","hashOfConfig":"26"},{"size":1646,"mtime":1611529737488,"results":"48","hashOfConfig":"26"},{"size":1641,"mtime":1611529394811,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12catrs",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\serviceWorker.js",[],["106","107"],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\app\\store.js",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\App.jsx",["108","109","110","111","112"],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\AppBars\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelistLazyLoad.jsx",["113","114","115","116","117"],"// ExpansionPanelistLazyLoad.jsx\r\nimport React, { useState, Fragment } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n    lighten,\r\n    darken,\r\n    LinearProgress,\r\n} from '@material-ui/core';\r\n\r\nimport theme from './theme';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport NetworkWifiIcon from '@material-ui/icons/NetworkWifi';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\n\r\nimport ExpansionPanelistPromise from './ExpansionPanelistPromise';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: 15,\r\n        // background: darken(theme.palette.background.default, 0.5),\r\n        // color: lighten(theme.palette.background.default, 0.1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    panelDetails: {\r\n        flexDirection: 'column',\r\n        height: 60,\r\n        overflow: 'auto',\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\n//___ API function that fetches based on an index value ___\r\nconst fetchPanelContent = index => \r\n    new Promise(resolve =>\r\n        setTimeout(() => \r\n            resolve(\r\n                [\r\n                    `First Panel Content...\r\n                    Sed ut perspiciatis unde omnis iste natus error sit \r\n                    voluptatem accusantium doloremque laudantium, totam rem aperiam,\r\n                    eaque ipsa quae ab illo inventore veritatis et quasi architecto \r\n                    beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem \r\n                    quia voluptas sit aspernatur aut odit aut fugit, sed quia \r\n                    consequuntur magni dolores eos qui ratione voluptatem sequi \r\n                    nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor \r\n                    sit amet, consectetur, adipisci velit, sed quia non numquam eius \r\n                    modi tempora incidunt ut labore et dolore magnam aliquam quaerat \r\n                    voluptatem.`,\r\n\r\n                    'Second Panel content...',\r\n                    'Third Panel content...',\r\n                ][index]\r\n            ), 1000\r\n        )\r\n    );\r\n\r\nconst MaybeProgress = ({ loading }) => \r\n    loading ? <LinearProgress /> : null\r\n\r\nexport default function ExpansionPanelistLazyLoad() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState(-1);\r\n    const [panels, setPanels] = useState([\r\n        {\r\n            title: 'First Panel Title',\r\n            icon: <DevicesIcon  className={classes.icon} />,\r\n            color: '#F00'\r\n        },\r\n        {\r\n            title: 'Second Panel Title',\r\n            icon: <NetworkWifiIcon className={classes.icon} />,\r\n            color: '#0F0'\r\n        },\r\n        {\r\n            title: 'Third Panel Title',\r\n            icon: <StorageIcon className={classes.icon} />,\r\n            color: '#00F'\r\n        },\r\n    ]);\r\n\r\n    const onPanelChange = (index) => (event, expanded) => {\r\n        if (!panels[index].content && expanded) {\r\n            fetchPanelContent(index).then(content => {\r\n                const newPanels = [...panels];\r\n                newPanels[index] = {...newPanels[index], content};\r\n                setPanels(newPanels)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {panels\r\n                .map((panel, index) => ( \r\n                    <Accordion\r\n                        key={index}\r\n                        disabled={panel.disabled}\r\n                        // expanded={index === expanded}\r\n                        onChange={onPanelChange(index)}\r\n                        className={classes.root}\r\n                        square={false}                \r\n                    >\r\n                        <div \r\n                            style={{\r\n                                marginRight: 0.1,\r\n                                borderLeft: `6px solid ${panel.color}`,\r\n                                borderRadius: '3px'\r\n                            }}\r\n                        >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            {panel.icon}\r\n                            <Typography \r\n                                variant='subtitle1'\r\n                                color='primary'\r\n                            >\r\n                                {panel.title}\r\n                                <ExpansionPanelistPromise />\r\n                            </Typography>\r\n                            \r\n                        </AccordionSummary>\r\n                        </div>\r\n                        <AccordionDetails \r\n                            className={classes.panelDetails}\r\n                        >\r\n                            <MaybeProgress loading={!panel.content} />\r\n                        \r\n                            <Typography>\r\n                                {panel.content}\r\n                            </Typography>\r\n                           \r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n// eof","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\AppBars\\FixedPosition.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\Header.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\components\\site\\Main.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelist.jsx",["118"],"// ExpansionPanelist.jsx\r\nimport React, { useState, Fragment } from 'react';\r\n\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport NetworkWifiIcon from '@material-ui/icons/NetworkWifi';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: 15,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        // border: 0,\r\n        // borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'darkblue',\r\n        // height: 48,\r\n        padding: '0 30px',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    panelDetails: {\r\n        flexDirection: 'column',\r\n        height: 60,\r\n        overflow: 'auto',\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nexport default function ExpansionPanelist() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState(0);\r\n    const [panels] = useState([\r\n        {\r\n            title: 'First Panel title',\r\n            content: `First Panel content...\r\n            Sed ut perspiciatis unde omnis iste natus error sit \r\n            voluptatem accusantium doloremque laudantium, totam rem aperiam,\r\n            eaque ipsa quae ab illo inventore veritatis et quasi architecto \r\n            beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem \r\n            quia voluptas sit aspernatur aut odit aut fugit, sed quia \r\n            consequuntur magni dolores eos qui ratione voluptatem sequi \r\n            nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor \r\n            sit amet, consectetur, adipisci velit, sed quia non numquam eius \r\n            modi tempora incidunt ut labore et dolore magnam aliquam quaerat \r\n            voluptatem.`,\r\n            icon: <DevicesIcon  className={classes.icon} />,\r\n            color: '#F00'\r\n        },\r\n        {\r\n            title: 'Second Panel title',\r\n            content: 'Second Panel content...',\r\n            icon: <NetworkWifiIcon className={classes.icon} />,\r\n            color: '#0F0'\r\n        },\r\n        {\r\n            title: 'Third Panel title',\r\n            content: 'Third Panel content...',\r\n            icon: <StorageIcon className={classes.icon} />,\r\n            color: '#00F'\r\n        },\r\n        {\r\n            title: 'Fourth Panel title',\r\n            content: 'Fourth Panel content...',\r\n            icon: <AcUnitIcon className={classes.icon} />,\r\n            color: '#FF0'\r\n        },\r\n    ]);\r\n\r\n    const onPanelChange = expanded => (index) => { \r\n        setExpanded(expanded);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {panels\r\n                .filter((panel) => !panel.hidden)\r\n                .map((panel, index) => (\r\n                    <Accordion\r\n                        key={index}\r\n                        disabled={panel.disabled}\r\n                        expanded={index === expanded}\r\n                        onChange={onPanelChange(index)}\r\n                        className={\"\"}              \r\n                    >\r\n                        <div \r\n                            style={{\r\n                                marginRight: 0.1,\r\n                                borderLeft: `6px solid ${panel.color}`,\r\n                                borderRadius: '3px'\r\n                            }}\r\n                        >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            \r\n                        >\r\n                            {panel.icon}\r\n                            <Typography \r\n                                variant='subtitle1'\r\n                                color='primary'\r\n                            >\r\n                                {panel.title}\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n                        </div>\r\n                        <AccordionDetails \r\n                            className={classes.root}>\r\n                            <Typography>\r\n                                {panel.content}\r\n                            </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n// eof","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\theme.js",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Accordions\\ExpansionPanelistPromise.jsx",["119"],"// ExpansionPanelistPromise.jdx\r\nimport React, { useState } from 'react';\r\n\r\nconst ExpansionPanelistPromise = () => {\r\n    const [content, setContent] = useState(\"Didn't yet start...\");\r\n    \r\n    // ___ use setTimeout to simulate latency to experience real API___\r\n    const fetchContent = new Promise((resolve, reject) => {    \r\n        setTimeout(() => {\r\n            resolve();\r\n        }, 2000);\r\n    }).then(() => {\r\n        setContent(\"Done now!\");\r\n    });\r\n    \r\n    return (\r\n        <div style={{color: 'red'}}>{content}</div>\r\n    );\r\n  };\r\n\r\n  export default ExpansionPanelistPromise;\r\n\r\n  // eof\r\n","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\Users.jsx",["120"],"// Users.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst baseURL = 'https://jsonplaceholder.typicode.com/';\r\n\r\nexport default function Users() {\r\n    const [state, setState] = useState([]);\r\n    const [error, setError] = useState(null)\r\n\r\n    const fetchUserData = () => {\r\n        axios.get(`${baseURL}users`, {})\r\n            .then(response => {\r\n                const data = response.data;\r\n                console.log(data);\r\n                const users = data.map(user =>\r\n                    <div \r\n                        style={{\r\n                            background: 'teal',\r\n                            border: '1px solid orange',\r\n                            paddingLeft: '50px',\r\n                            color: '#FFFFFF',\r\n                            textAlign: 'left', \r\n\r\n                        }} >\r\n                        <h3>Axios API request from : {baseURL}</h3>\r\n                        <p>[{user.id-1}]</p>\r\n                        <p>{user.name}</p>\r\n                        <p>{user.email}</p>\r\n                        <p>{user.websidte}</p>\r\n                        <p>{user.company.name}</p>\r\n                    </div>\r\n                )\r\n                setState({users})\r\n            })\r\n            .catch(error => setError(error));\r\n    }\r\n    useEffect(() => {\r\n        fetchUserData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>{state.users}</div>\r\n    );\r\n}; ","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\Article.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\index.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\ReqResUsers.jsx",["121","122","123"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst baseURL = \"https://reqres.in/api/\"\r\n\r\nexport default function ReqResUsers() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading] = useState(false);\r\n  const [errors] = useState(null);\r\n\r\n  const fetchUsers = async () => {\r\n    const response = await fetch(`${baseURL}users`)\r\n    const json = await response.json();\r\n    setUsers(json.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Users\">\r\n      <h4>Fetch API request from ReqRes: {baseURL}users</h4>\r\n      <div className=\"flex\">\r\n        {users.length &&\r\n          users.map((user) => {\r\n            return (\r\n              <div key={user.id}>\r\n                <p>\r\n                  <strong>{user.first_name}</strong>\r\n                </p>\r\n                <p>{user.email}</p>\r\n                <img key={user.avatar} src={user.avatar} />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\JsonPlaceholderFetchUsers.jsx",["124","125"],"// JsonPlaceholderUsers.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst baseURL = 'https://jsonplaceholder.typicode.com/';\r\n\r\nexport default function JsonPlaceholderFetchUsers() {\r\n    const [state, setState] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n     const fetchUsersData = () => {\r\n        fetch(`${baseURL}users`)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response)\r\n                const users = response.map(user =>\r\n                    <div \r\n                        style={{\r\n                            background: 'teal',\r\n                            border: '1px solid orange',\r\n                            paddingLeft: '50px',\r\n                            color: '#FFFFFF',\r\n                            textAlign: 'left', \r\n\r\n                        }} >\r\n                        <h3>Fetch API request from : {baseURL}</h3>\r\n                        <p>[{user.id-1}]</p>\r\n                        <p>{user.name}</p>\r\n                        <p>{user.email}</p>\r\n                        <p>{user.websidte}</p>\r\n                        <p>{user.company.name}</p>\r\n                    </div>\r\n                )\r\n                setState({users})\r\n                setIsLoading(true)\r\n            })\r\n            .catch(error => setError(error));    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>{state.users}</div>\r\n    );\r\n}","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Axios\\JsonPlaceholderAxiosUsers.jsx",["126","127"],"// JsonPlaceholderUsers.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst baseURL = 'https://jsonplaceholder.typicode.com/';\r\n\r\nexport default function JsonPlaceholderAxiosUsers() {\r\n    const [state, setState] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n     const fetchUsersData = () => {\r\n        axios.get(`${baseURL}users`, {})\r\n        .then(response => {\r\n            const data = response.data;\r\n            console.log(data);\r\n            const users = data.map(user =>\r\n                    <div \r\n                        style={{\r\n                            background: 'purple',\r\n                            border: '1px solid teal',\r\n                            paddingLeft: '50px',\r\n                            color: '#FFFFFF',\r\n                            textAlign: 'left', \r\n\r\n                        }} >\r\n                        <h3>Axios API request from : {baseURL}</h3>\r\n                        <p>[{user.id-1}]</p>\r\n                        <p>{user.name}</p>\r\n                        <p>{user.email}</p>\r\n                        <p>{user.websidte}</p>\r\n                        <p>{user.company.name}</p>\r\n                    </div>\r\n                )\r\n                setState({users})\r\n                setIsLoading(true)\r\n            })\r\n            .catch(error => setError(error));    }\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>{state.users}</div>\r\n    );\r\n}","C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\MuiFetchReqResUsers.jsx",[],"C:\\Users\\Owner\\Documents\\Aptana Studio 3 Workspace\\eagleton-web-designs\\src\\features\\Fetch\\PplCard.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":3,"nodeType":"134","messageId":"135","endLine":12,"endColumn":9},{"ruleId":"132","severity":1,"message":"136","line":28,"column":3,"nodeType":"134","messageId":"135","endLine":28,"endColumn":8},{"ruleId":"132","severity":1,"message":"137","line":30,"column":3,"nodeType":"134","messageId":"135","endLine":30,"endColumn":28},{"ruleId":"132","severity":1,"message":"138","line":35,"column":3,"nodeType":"134","messageId":"135","endLine":35,"endColumn":14},{"ruleId":"132","severity":1,"message":"139","line":36,"column":3,"nodeType":"134","messageId":"135","endLine":36,"endColumn":28},{"ruleId":"132","severity":1,"message":"140","line":11,"column":5,"nodeType":"134","messageId":"135","endLine":11,"endColumn":12},{"ruleId":"132","severity":1,"message":"141","line":12,"column":5,"nodeType":"134","messageId":"135","endLine":12,"endColumn":11},{"ruleId":"132","severity":1,"message":"142","line":16,"column":8,"nodeType":"134","messageId":"135","endLine":16,"endColumn":13},{"ruleId":"132","severity":1,"message":"143","line":72,"column":12,"nodeType":"134","messageId":"135","endLine":72,"endColumn":20},{"ruleId":"132","severity":1,"message":"144","line":72,"column":22,"nodeType":"134","messageId":"135","endLine":72,"endColumn":33},{"ruleId":"132","severity":1,"message":"142","line":18,"column":8,"nodeType":"134","messageId":"135","endLine":18,"endColumn":13},{"ruleId":"132","severity":1,"message":"145","line":8,"column":11,"nodeType":"134","messageId":"135","endLine":8,"endColumn":23},{"ruleId":"132","severity":1,"message":"146","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":17},{"ruleId":"132","severity":1,"message":"147","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":17},{"ruleId":"132","severity":1,"message":"148","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":33,"column":17,"nodeType":"151","endLine":33,"endColumn":60},{"ruleId":"132","severity":1,"message":"152","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":21},{"ruleId":"132","severity":1,"message":"146","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":17},{"ruleId":"132","severity":1,"message":"152","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":21},{"ruleId":"132","severity":1,"message":"146","line":10,"column":12,"nodeType":"134","messageId":"135","endLine":10,"endColumn":17},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'JsonPlaceholderAxiosUsers' is defined but never used.","'ReqResUsers' is defined but never used.","'JsonPlaceholderFetchUsers' is defined but never used.","'lighten' is defined but never used.","'darken' is defined but never used.","'theme' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'fetchContent' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'errors' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]